{{- if .Values.elasticsearch.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    {{- include "wikibase.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
      {{- include "wikibase.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: elasticsearch
        {{- include "wikibase.labels" . | nindent 8 }}
    spec:
    {{- if .Values.elasticsearch.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.elasticsearch.affinity "context" $) | nindent 8 }}
    {{- else }}
      affinity:
      {{- if .Values.elasticsearch.podAffinity }}
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.elasticsearch.podAffinityPreset "component" "elasticsearch" "context" $) | nindent 10 }}
      {{- end }}
      {{- if .Values.elasticsearch.podAntiAffinity }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.elasticsearch.podAntiAffinityPreset "component" "elasticsearch" "context" $) | nindent 10 }}
      {{- end }}
      {{- if .Values.elasticsearch.nodeAffinity }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.elasticsearch.nodeAffinityPreset.type "key" .Values.elasticsearch.nodeAffinityPreset.key "values" .Values.elasticsearch.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
    {{- end }}
    {{- if .Values.elasticsearch.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.elasticsearch.nodeSelector "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.elasticsearch.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.elasticsearch.tolerations "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.elasticsearch.schedulerName }}
      schedulerName: {{ .Values.elasticsearch.schedulerName }}
    {{- end }}
    {{- if .Values.elasticsearch.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.elasticsearch.topologySpreadConstraints "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.elasticsearch.priorityClassName }}
      priorityClassName: {{ .Values.elasticsearch.priorityClassName | quote }}
    {{- else if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
    {{- end }}
      containers:
        - name: elasticsearch
          env:
            - name: ES_JAVA_OPTS
              value: -Xms512m -Xmx2048m -Dlog4j2.formatMsgNoLookups=true
            - name: discovery.type
              value: single-node
          image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
          ports:
            - name: elastic
              containerPort: 9200
        {{- if .Values.elasticsearch.persistence.enabled }}
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
        {{- end }}
      restartPolicy: Always
      volumes:
      {{- if .Values.elasticsearch.persistence.enabled }}
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data
      {{- end }}
{{- end -}}
