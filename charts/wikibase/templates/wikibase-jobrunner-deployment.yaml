{{- if and .Values.wikibase.enabled .Values.wikibase.jobrunner.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wikibase-jobrunner
  labels:
    {{- include "wikibase.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wikibase-jobrunner
      {{- include "wikibase.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wikibase-jobrunner
        {{- include "wikibase.labels" . | nindent 8 }}
    spec:
      containers:
        - name: wikibase-jobrunner
          args:
            - /jobrunner-entrypoint.sh
          command:
            - /bin/bash
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MW_ADMIN_NAME
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_NAME
            - name: MW_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_PASS
            - name: MW_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_EMAIL
            - name: MW_WG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_WG_SECRET_KEY
            - name: MW_WG_JOB_RUN_RATE
              value: {{ .Values.wikibase.jobrunner.runRate | default 1 | quote }}
            - name: WIKIBASE_HOST
              value: "wikibase.$(NAMESPACE).svc.cluster.local"
          {{- if .Values.mariadb.enabled }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_PASS
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_PORT
            - name: DB_SERVER
              value: "$(NAMESPACE)-mariadb.$(NAMESPACE).svc.cluster.local:$(DB_PORT)"
          {{- else }}
            {{- with .Values.wikibase.auth.externalDatabase }}
            - name: DB_NAME
              value: {{ .database | quote }}
            - name: DB_USER
              value: {{ .user | quote }}
            - name: DB_PASS
              value: {{ .password | quote }}
            - name: DB_SERVER
              value: "{{ .host }}:{{ .port }}"
            {{- end }}
          {{- end }}
          {{- if .Values.elasticsearch.enabled }}
            - name: MW_ELASTIC_HOST
              value: "elasticsearch.$(NAMESPACE).svc.cluster.local"
            - name: MW_ELASTIC_PORT
              value: {{ .Values.elasticsearch.service.port | default 9200 | quote }}
          {{- end }}
          image: "{{ .Values.wikibase.jobrunner.image.repository }}:{{ .Values.wikibase.jobrunner.image.tag }}"
          volumeMounts:
            - name: wikibase-jobrunner-data
              mountPath: /
              readOnly: true
          {{- if and .Values.global.shared.enabled .Values.global.shared.persistence.enabled }}
            - name: shared-data
              mountPath: /var/www/html
              readOnly: true
          {{- end }}
      restartPolicy: Always
      volumes:
        - name: wikibase-jobrunner-data
          configMap:
            name: wikibase-jobrunner-data
            items:
              - key: jobrunner-entrypoint.sh
                path: jobrunner-entrypoint.sh
      {{- if and .Values.global.shared.enabled .Values.global.shared.persistence.enabled }}
        - name: shared-data
          persistentVolumeClaim:
            claimName: shared-data
      {{- end }}
{{- end }}