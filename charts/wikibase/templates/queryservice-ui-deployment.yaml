{{- if and .Values.queryservice.enabled .Values.queryservice.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queryservice-ui
  labels:
    {{- include "wikibase.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queryservice-ui
      {{- include "wikibase.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: queryservice-ui
        {{- include "wikibase.labels" . | nindent 8 }}
    spec:
    {{- if .Values.queryservice.ui.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.queryservice.ui.affinity "context" $) | nindent 8 }}
    {{- else }}
      affinity:
      {{- if .Values.queryservice.ui.podAffinity }}
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.queryservice.ui.podAffinityPreset "component" "queryservice.ui" "context" $) | nindent 10 }}
      {{- end }}
      {{- if .Values.queryservice.ui.podAntiAffinity }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.queryservice.ui.podAntiAffinityPreset "component" "queryservice.ui" "context" $) | nindent 10 }}
      {{- end }}
      {{- if .Values.queryservice.ui.nodeAffinity }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.queryservice.ui.nodeAffinityPreset.type "key" .Values.queryservice.ui.nodeAffinityPreset.key "values" .Values.queryservice.ui.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
    {{- end }}
    {{- if .Values.queryservice.ui.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.queryservice.ui.nodeSelector "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.queryservice.ui.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.queryservice.ui.tolerations "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.queryservice.ui.schedulerName }}
      schedulerName: {{ .Values.queryservice.ui.schedulerName }}
    {{- end }}
    {{- if .Values.queryservice.ui.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.queryservice.ui.topologySpreadConstraints "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.queryservice.ui.priorityClassName }}
      priorityClassName: {{ .Values.queryservice.ui.priorityClassName | quote }}
    {{- else if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
    {{- end }}
      containers:
        - name: queryservice-ui
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WDQS_HOST
              value: "queryservice.$(NAMESPACE).svc.cluster.local"
          {{- if .Values.wikibase.enabled }}
            - name: WIKIBASE_HOST
              value: "wikibase.$(NAMESPACE).svc.cluster.local"
          {{- end }}
          image: "{{ .Values.queryservice.ui.image.repository }}:{{ .Values.queryservice.ui.image.tag }}"
          ports:
            - name: http
              containerPort: 80
      restartPolicy: Always
{{- end -}}
