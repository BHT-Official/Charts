{{- if .Values.wikibase.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wikibase
  labels:
    {{- include "wikibase.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wikibase
      {{- include "wikibase.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wikibase
        {{- include "wikibase.labels" . | nindent 8 }}
    spec:
    {{- if .Values.wikibase.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.wikibase.affinity "context" $) | nindent 8 }}
    {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.wikibase.podAffinityPreset "component" "wikibase" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.wikibase.podAntiAffinityPreset "component" "wikibase" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.wikibase.nodeAffinityPreset.type "key" .Values.wikibase.nodeAffinityPreset.key "values" .Values.wikibase.nodeAffinityPreset.values) | nindent 10 }}
    {{- end }}
    {{- if .Values.wikibase.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.wikibase.nodeSelector "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.wikibase.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.wikibase.tolerations "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.wikibase.schedulerName }}
      schedulerName: {{ .Values.wikibase.schedulerName }}
    {{- end }}
    {{- if .Values.wikibase.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.wikibase.topologySpreadConstraints "context" $) | nindent 8 }}
    {{- end }}
    {{- if .Values.wikibase.priorityClassName }}
      priorityClassName: {{ .Values.wikibase.priorityClassName | quote }}
    {{- else if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
    {{- end }}
      containers:
        - name: wikibase
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MW_ADMIN_NAME
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_NAME
            - name: MW_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_PASS
            - name: MW_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_EMAIL
            - name: MW_WG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_WG_SECRET_KEY
          {{- if .Values.mariadb.enabled }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_PASS
            - name: DB_SERVER
              value: "{{- include "wikibase.name" . | lower }}-mariadb.$(NAMESPACE).svc.cluster.local:{{ .Values.mariadb.primary.service.ports.mysql }}"
          {{- else }}
            {{- with .Values.wikibase.auth.externalDatabase }}
            - name: DB_NAME
              value: {{ .database | quote }}
            - name: DB_USER
              value: {{ .user | quote }}
            - name: DB_PASS
              value: {{ .password | quote }}
            - name: DB_SERVER
              value: "{{ .host }}:{{ .port }}"
            {{- end }}
          {{- end }}
            - name: MW_WG_JOB_RUN_RATE
            {{- if .Values.wikibase.jobrunner.enabled }}
              value: "0"
            {{- else }}
              value: "1"
            {{- end }}
            - name: WIKIBASE_HOST
              value: "wikibase.$(NAMESPACE).svc.cluster.local"
          {{- if .Values.elasticsearch.enabled }}
            - name: MW_ELASTIC_HOST
              value: "elasticsearch.$(NAMESPACE).svc.cluster.local"
            - name: MW_ELASTIC_PORT
              value: {{ .Values.elasticsearch.service.port | default 9200 | quote }}
          {{- end }}
          {{- if .Values.quickstatements.enabled }}
            - name: QS_PUBLIC_SCHEME_HOST_AND_PORT
              value: "http://quickstatements.$(NAMESPACE).srv.cluster.local:{{ .Values.quickstatements.service.port | default 8840 }}"
          {{- end }}
          image: "{{ .Values.wikibase.image.repository }}:{{ .Values.wikibase.image.tag }}"
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: wikibase-provision-scripts
              mountPath: /app
              readOnly: true
          {{- if and .Values.global.shared.enabled .Values.global.shared.persistence.enabled }}
            - name: shared-data
              mountPath: /var/shared-localsettings
          {{- end }}
          {{- if and .Values.quickstatements.enabled .Values.quickstatements.persistence.enabled }}
            - name: quickstatements-data
              mountPath: /quickstatements/data
          {{- end }}
        - name: wikibase-jobrunner
          command:
            - /bin/bash
          args:
            - /app/jobrunner-entrypoint.sh
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MW_ADMIN_NAME
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_NAME
            - name: MW_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_PASS
            - name: MW_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_ADMIN_EMAIL
            - name: MW_WG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: wikibase-auth-secret
                  key: MW_WG_SECRET_KEY
            - name: MW_WG_JOB_RUN_RATE
              value: {{ .Values.wikibase.jobrunner.runRate | default 1 | quote }}
            - name: WIKIBASE_HOST
              value: "wikibase.$(NAMESPACE).svc.cluster.local"
          {{- if .Values.mariadb.enabled }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-auth-secret
                  key: DB_PASS
            - name: DB_SERVER
              value: "{{- include "wikibase.name" . | lower }}-mariadb.$(NAMESPACE).svc.cluster.local:{{ .Values.mariadb.primary.service.ports.mysql }}"
          {{- else }}
            {{- with .Values.wikibase.auth.externalDatabase }}
            - name: DB_NAME
              value: {{ .database | quote }}
            - name: DB_USER
              value: {{ .user | quote }}
            - name: DB_PASS
              value: {{ .password | quote }}
            - name: DB_SERVER
              value: "{{ .host }}:{{ .port }}"
            {{- end }}
          {{- end }}
          {{- if .Values.elasticsearch.enabled }}
            - name: MW_ELASTIC_HOST
              value: "elasticsearch.$(NAMESPACE).svc.cluster.local"
            - name: MW_ELASTIC_PORT
              value: {{ .Values.elasticsearch.service.port | default 9200 | quote }}
          {{- end }}
          image: "{{ .Values.wikibase.jobrunner.image.repository }}:{{ .Values.wikibase.jobrunner.image.tag }}"
          volumeMounts:
            - name: wikibase-provision-scripts
              mountPath: /app
              readOnly: true
          {{- if and .Values.global.shared.enabled .Values.global.shared.persistence.enabled }}
            - name: shared-data
              mountPath: /shared
              readOnly: true
          {{- end }}
      restartPolicy: Always
      volumes:
        - name: wikibase-provision-scripts
          configMap:
            name: wikibase-provision-scripts
            items:
              - key: extra-install.sh
                path: extra-install.sh
              - key: entrypoint.sh
                path: entrypoint.sh
              - key: jobrunner-entrypoint.sh
                path: jobrunner-entrypoint.sh
      {{- if and .Values.global.shared.enabled .Values.global.shared.persistence.enabled }}
        - name: shared-data
          persistentVolumeClaim:
            claimName: shared-data
      {{- end }}
      {{- if and .Values.quickstatements.enabled .Values.quickstatements.persistence.enabled }}
        - name: quickstatements-data
          persistentVolumeClaim:
            claimName: quickstatements-data
      {{- end }}
{{- end -}}
